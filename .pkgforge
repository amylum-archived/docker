name 'docker'
org 'amylum'

deps(
  lvm2: {
    version: '2.02.181-1',
    checksum: '3c8c7a6f79c8e0d48265aa92686dfbd9cac0a4c135afa6564b6ca4511babb2a1'
  },
  'linux-api-headers': {
    version: '4.17-1',
    checksum: 'b2526797b346c73dc44da02dc16def8eb2059c02bd015f76497e9babadc1a44f'
  },
  'btrfs-progs': {
    version: '4.17-8',
    checksum: 'd8406c4f78e18455b91fa4273d0375de25c1984c62587215f7e72e271f017e26'
  },
  libtool: {
    version: '2.4.6-2',
    checksum: '5a3a7cd180e16e399501a10cc13da752e4d4e3f86b73ae9afa5ffa9f63b86d3a'
  },
  libseccomp: {
    version: '2.3.3-4',
    checksum: '4cfe1658757993f588e0310ea7d68d5db8756e5ec93adc5502b6455e708d22b9'
  }
)

cflags
harden

build do
  gopath = tmpdir(:gopath)
  ENV['GOPATH'] = gopath

  git_hash = `git --git-dir #{tmpdir(:build)}/.git rev-parse --short HEAD`.strip
  git_version = `git --git-dir #{tmpdir(:build)}/.git describe --tag | sed 's/^v//'`.strip

  def link_component(src, target)
    run "mkdir -p #{ENV['GOPATH']}/src/#{target}"
    run "rm -r #{ENV['GOPATH']}/src/#{target}"
    run "ln -s #{tmpdir(:build)}/components/#{src}/ #{ENV['GOPATH']}/src/#{target}"
  end

  link_component('cli', 'github.com/docker/cli')
  run(
      "make -C #{ENV['GOPATH']}/src/github.com/docker/cli VERSION=#{git_version} dynbinary",
      "DISABLE_WARN_OUTSIDE_CONTAINER" => "1",
      'CC' => 'musl-gcc',
      'CGO_CFLAGS' => @forge.cflags.join(' '),
      'CGO_LDFLAGS' => @forge.cflags.join(' '),
      'PKG_CONFIG' => '/bin/true'
  )

  link_component('engine', 'github.com/docker/docker')
  run(
    "cd #{ENV['GOPATH']}/src/github.com/docker/docker && ./hack/make.sh dynbinary",
    "DOCKER_BUILDTAGS" => "seccomp",
    "VERSION" => git_version,
    "DOCKER_GITCOMMIT" => git_hash,
    'CC' => 'musl-gcc',
    'CGO_CFLAGS' => @forge.cflags.join(' '),
    'CGO_LDFLAGS' => @forge.cflags.join(' '),
    'PKG_CONFIG' => '/bin/true'
  )
end

test do
  run 'docker -v'
end
